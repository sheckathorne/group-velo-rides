# Generated by Django 4.2.13 on 2024-05-17 02:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import group_velo.clubs.models
import group_velo.data.validators
import group_velo.events.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Club",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Club Name")),
                (
                    "abbreviation",
                    models.CharField(
                        blank=True,
                        max_length=5,
                        null=True,
                        verbose_name="Club Abbreviation",
                    ),
                ),
                ("url", models.CharField(max_length=255, verbose_name="Website")),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        default="default/bicycle.png",
                        max_length=255,
                        null=True,
                        upload_to=group_velo.clubs.models.Club.image_upload_to,
                    ),
                ),
                ("city", models.CharField(max_length=50, verbose_name="City")),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("AL", "Alabama"),
                            ("AK", "Alaska"),
                            ("AS", "American Samoa"),
                            ("AZ", "Arizona"),
                            ("AR", "Arkansas"),
                            ("AA", "Armed Forces Americas"),
                            ("AE", "Armed Forces Europe"),
                            ("AP", "Armed Forces Pacific"),
                            ("CA", "California"),
                            ("CO", "Colorado"),
                            ("CT", "Connecticut"),
                            ("DE", "Delaware"),
                            ("DC", "District of Columbia"),
                            ("FL", "Florida"),
                            ("GA", "Georgia"),
                            ("GU", "Guam"),
                            ("HI", "Hawaii"),
                            ("ID", "Idaho"),
                            ("IL", "Illinois"),
                            ("IN", "Indiana"),
                            ("IA", "Iowa"),
                            ("KS", "Kansas"),
                            ("KY", "Kentucky"),
                            ("LA", "Louisiana"),
                            ("ME", "Maine"),
                            ("MD", "Maryland"),
                            ("MA", "Massachusetts"),
                            ("MI", "Michigan"),
                            ("MN", "Minnesota"),
                            ("MS", "Mississippi"),
                            ("MO", "Missouri"),
                            ("MT", "Montana"),
                            ("NE", "Nebraska"),
                            ("NV", "Nevada"),
                            ("NH", "New Hampshire"),
                            ("NJ", "New Jersey"),
                            ("NM", "New Mexico"),
                            ("NY", "New York"),
                            ("NC", "North Carolina"),
                            ("ND", "North Dakota"),
                            ("MP", "Northern Mariana Islands"),
                            ("OH", "Ohio"),
                            ("OK", "Oklahoma"),
                            ("OR", "Oregon"),
                            ("PA", "Pennsylvania"),
                            ("PR", "Puerto Rico"),
                            ("RI", "Rhode Island"),
                            ("SC", "South Carolina"),
                            ("SD", "South Dakota"),
                            ("TN", "Tennessee"),
                            ("TX", "Texas"),
                            ("UT", "Utah"),
                            ("VT", "Vermont"),
                            ("VI", "Virgin Islands"),
                            ("VA", "Virginia"),
                            ("WA", "Washington"),
                            ("WV", "West Virginia"),
                            ("WI", "Wisconsin"),
                            ("WY", "Wyoming"),
                        ],
                        max_length=2,
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(
                        max_length=5,
                        validators=[
                            group_velo.data.validators.numeric_chars,
                            group_velo.data.validators.length_of_five,
                        ],
                        verbose_name="Zip Code",
                    ),
                ),
                (
                    "email_address",
                    models.EmailField(
                        blank=True, max_length=255, null=True, verbose_name="Email"
                    ),
                ),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        max_length=128,
                        null=True,
                        region=None,
                        verbose_name="Phone Number",
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        decimal_places=6, max_digits=9, verbose_name="Latitude"
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        decimal_places=6, max_digits=9, verbose_name="Latitude"
                    ),
                ),
                ("private", models.BooleanField(default=True, verbose_name="Private")),
                (
                    "privacy_level",
                    models.IntegerField(
                        choices=[(1, "Open"), (2, "Semi-private"), (3, "Private")],
                        default=3,
                        verbose_name="Privacy Level",
                    ),
                ),
                (
                    "create_date",
                    models.DateField(auto_now_add=True, verbose_name="Date Created"),
                ),
                (
                    "founded_date",
                    models.DateField(auto_now_add=True, verbose_name="Date Founded"),
                ),
                (
                    "edited_date",
                    models.DateField(blank=True, null=True, verbose_name="Date Edited"),
                ),
                ("slug", models.SlugField(max_length=100)),
                (
                    "description",
                    models.TextField(max_length=3000, verbose_name="Club description"),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "private_ride_attendence",
                    models.BooleanField(
                        default=False, verbose_name="Ride Attendence is Private"
                    ),
                ),
                (
                    "private_ride_waitlist",
                    models.BooleanField(
                        default=False, verbose_name="Ride Waitlist is Private"
                    ),
                ),
                (
                    "allow_ride_discussion",
                    models.BooleanField(
                        default=True, verbose_name="Allow Ride Discussion"
                    ),
                ),
                (
                    "strict_ride_classification",
                    models.BooleanField(
                        default=False, verbose_name="Strict Ride Classification"
                    ),
                ),
                (
                    "verified",
                    models.BooleanField(default=False, verbose_name="Verified"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_by_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "edited_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="edited_by_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClubVerificationRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        help_text="You will be contacted for additional verification steps",
                        max_length=255,
                        verbose_name="Contact Email",
                    ),
                ),
                (
                    "request_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Request Date"
                    ),
                ),
                (
                    "response_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Response Date"
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[(1, "Pending"), (2, "Approved"), (3, "Denied")],
                        default=1,
                        verbose_name="Request Status",
                    ),
                ),
                (
                    "club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="clubs.club"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="verification_request_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "responder",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="verification_response_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClubRideClassificationLimit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "surface_type",
                    models.TextField(
                        choices=[
                            ("R", "Road"),
                            ("G", "Gravel"),
                            ("O", "Off Road"),
                            ("M", "Mixed"),
                        ],
                        max_length=1,
                        verbose_name="Surface Type",
                    ),
                ),
                (
                    "group_classification",
                    group_velo.events.fields.CharFieldAllowsMultiSelectSearch(
                        choices=[
                            ("A", "A"),
                            ("B", "B"),
                            ("C", "C"),
                            ("D", "D"),
                            ("N", "Novice"),
                            ("NA", "None"),
                        ],
                        max_length=2,
                        verbose_name="Ride Classification",
                    ),
                ),
                (
                    "lower_pace_range",
                    models.DecimalField(
                        decimal_places=1, max_digits=3, verbose_name="Lower Pace Range"
                    ),
                ),
                (
                    "upper_pace_range",
                    models.DecimalField(
                        decimal_places=1, max_digits=3, verbose_name="Upper Pace Range"
                    ),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="clubs.club"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClubMembershipRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "request_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Request Date"
                    ),
                ),
                (
                    "response_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Response Date"
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[(1, "Pending"), (2, "Approved"), (3, "Denied")],
                        default=1,
                        verbose_name="Request Status",
                    ),
                ),
                (
                    "club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="clubs.club"
                    ),
                ),
                (
                    "responder",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="response_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="request_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClubMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_date",
                    models.DateField(auto_now_add=True, verbose_name="Date Joined"),
                ),
                (
                    "membership_expires",
                    models.DateTimeField(verbose_name="Membership Expires"),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "membership_type",
                    models.IntegerField(
                        choices=[
                            (1, "Creator"),
                            (2, "Admin"),
                            (3, "Ride Leader"),
                            (4, "Route Contributor"),
                            (5, "Paid Member"),
                            (6, "Unpaid Member"),
                            (7, "Non-Member"),
                        ],
                        verbose_name="Membership Type",
                    ),
                ),
                (
                    "club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="clubs.club"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="clubrideclassificationlimit",
            constraint=models.UniqueConstraint(
                fields=("club", "surface_type", "group_classification"),
                name="There can only be one pace range per club, surface, and classification",
            ),
        ),
        migrations.AddConstraint(
            model_name="clubmembership",
            constraint=models.UniqueConstraint(
                fields=("user", "club"), name="One user membership per club"
            ),
        ),
    ]
